name: Windows

on:
  push:
    branches:
      - master
      - windows
  pull_request:
    branches:
      - master

jobs:
  build:
    name: "py${{ matrix.python-version }} on ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7"]
        os: ["windows-latest"]

    steps:
      - uses: actions/checkout@v2
      - uses: goanpeca/setup-miniconda@v1
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          # activate-environment: exoplanet
          # channels: conda-forge

      - name: Install dependencies
        run: |
          conda create -n exoplanet python=3.7 -c conda-forge -q numpy theano
          conda activate exoplanet
          python -c "import numpy; print(numpy.__version__)"
          python -c "import theano; print(theano.__version__)"
      # - name: Install dependencies
      #   run: |
      #     conda install -c conda-forge -q numpy
      #     python -m pip install -U pip
      #     python -m pip install -U theano
      #   # conda install -c conda-forge -q numpy astropy celerite
      #   # python -m pip install -U pip setuptools wheel pytest-filter-subpackage
      # #    python -m pip install -e .[test]
      # # - name: Set up Python ${{ matrix.python-version }}
      # #   uses: actions/setup-python@v1
      # #   with:
      # #     python-version: ${{ matrix.python-version }}
      # # # Cache dependencies
      # # - uses: actions/cache@v1
      # #   with:
      # #     path: ~\AppData\Local\pip\Cache
      # #     key: ${{ matrix.os }}-pip-${{ hashFiles('setup.py') }}
      # #     restore-keys: |
      # #       ${{ matrix.os }}-pip-
      # # # Setup
      # # - name: Install dependencies
      # #   run: |
      # #     python -m pip install -U pip setuptools numpy pybind11 wheel
      # #     python -m pip wheel --wheel-dir=~\AppData\Local\pip\Cache\exoplanet --find-links=~\AppData\Local\pip\Cache\exoplanet .[test]
      # #     python -m pip install -U --find-links=~\AppData\Local\pip\Cache\exoplanet -e .[test]
      # # Run a first quick test to make sure that compiling works
      # - name: Initial test
      #   # env:
      #   # THEANO_FLAGS: mode=FAST_COMPILE
      #   # MKL_THREADING_LAYER: GNU
      #   # MKL_NUM_THREADS: 1
      #   # OMP_NUM_THREADS: 1
      #   # CFLAGS: -ffixed-xmm16 -ffixed-xmm17 -ffixed-xmm18 -ffixed-xmm19 -ffixed-xmm20 -ffixed-xmm21 -ffixed-xmm22 -ffixed-xmm23 -ffixed-xmm24 -ffixed-xmm25 -ffixed-xmm26 -ffixed-xmm27 -ffixed-xmm28 -ffixed-xmm29 -ffixed-xmm30 -ffixed-xmm31
      #   run: |
      #     python -c 'import theano; print(theano.__version__)'
      #   # python -m pytest -vs tests/citations_test.py::test_basic
      # # Running tests
      # - name: Run tests
      #   # env:
      #   #   THEANO_FLAGS: mode=FAST_COMPILE
      #   #   MKL_THREADING_LAYER: GNU
      #   #   MKL_NUM_THREADS: 1
      #   #   OMP_NUM_THREADS: 1
      #   #   # CFLAGS: -ffixed-xmm16 -ffixed-xmm17 -ffixed-xmm18 -ffixed-xmm19 -ffixed-xmm20 -ffixed-xmm21 -ffixed-xmm22 -ffixed-xmm23 -ffixed-xmm24 -ffixed-xmm25 -ffixed-xmm26 -ffixed-xmm27 -ffixed-xmm28 -ffixed-xmm29 -ffixed-xmm30 -ffixed-xmm31
      #   run: |
      #     python -m pytest -v tests
